/* Generated by Yosys 0.28+1 (git sha1 a9c792dce, clang 10.0.0-4ubuntu1 -fPIC -Os) */

(* hdlname = "\\mux32x1x16" *)
(* top =  1  *)
(* src = "mux32x1x16.v:3.1-22.10" *)
module mux32x1x16(mux_input0, mux_input1, selector, mux_output);
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _000_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _001_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _002_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _003_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _004_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _005_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _006_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _007_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _008_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _009_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _010_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _011_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _012_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _013_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _014_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  wire _015_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _016_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _017_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _018_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _019_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _020_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _021_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _022_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _023_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _024_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _025_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _026_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _027_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _028_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _029_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _030_;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  wire _031_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _032_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _033_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _034_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _035_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _036_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _037_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _038_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _039_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _040_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _041_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _042_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _043_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _044_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _045_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _046_;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  (* src = "mux32x1x16.v:6.13-6.21" *)
  wire _081_;
  (* src = "mux32x1x16.v:4.16-4.26" *)
  input [15:0] mux_input0;
  wire [15:0] mux_input0;
  (* src = "mux32x1x16.v:5.20-5.30" *)
  input [15:0] mux_input1;
  wire [15:0] mux_input1;
  (* src = "mux32x1x16.v:7.25-7.35" *)
  output [15:0] mux_output;
  wire [15:0] mux_output;
  (* src = "mux32x1x16.v:6.13-6.21" *)
  input selector;
  wire selector;
  assign _048_ = ~_081_;
  assign _049_ = ~(_023_ & _081_);
  assign _050_ = ~(_007_ & _048_);
  assign _039_ = ~(_049_ & _050_);
  assign _051_ = ~(_081_ & _024_);
  assign _052_ = ~(_048_ & _008_);
  assign _040_ = ~(_051_ & _052_);
  assign _053_ = ~(_081_ & _025_);
  assign _054_ = ~(_048_ & _009_);
  assign _041_ = ~(_053_ & _054_);
  assign _055_ = ~(_081_ & _026_);
  assign _056_ = ~(_048_ & _010_);
  assign _042_ = ~(_055_ & _056_);
  assign _057_ = ~(_081_ & _027_);
  assign _058_ = ~(_048_ & _011_);
  assign _043_ = ~(_057_ & _058_);
  assign _059_ = ~(_081_ & _028_);
  assign _060_ = ~(_048_ & _012_);
  assign _044_ = ~(_059_ & _060_);
  assign _061_ = ~(_081_ & _029_);
  assign _062_ = ~(_048_ & _013_);
  assign _045_ = ~(_061_ & _062_);
  assign _063_ = ~(_081_ & _030_);
  assign _064_ = ~(_048_ & _014_);
  assign _046_ = ~(_063_ & _064_);
  assign _065_ = ~(_081_ & _031_);
  assign _066_ = ~(_048_ & _015_);
  assign _047_ = ~(_065_ & _066_);
  assign _067_ = ~(_081_ & _017_);
  assign _068_ = ~(_048_ & _001_);
  assign _033_ = ~(_067_ & _068_);
  assign _069_ = ~(_081_ & _018_);
  assign _070_ = ~(_048_ & _002_);
  assign _034_ = ~(_069_ & _070_);
  assign _071_ = ~(_081_ & _019_);
  assign _072_ = ~(_048_ & _003_);
  assign _035_ = ~(_071_ & _072_);
  assign _073_ = ~(_081_ & _020_);
  assign _074_ = ~(_048_ & _004_);
  assign _036_ = ~(_073_ & _074_);
  assign _075_ = ~(_081_ & _021_);
  assign _076_ = ~(_048_ & _005_);
  assign _037_ = ~(_075_ & _076_);
  assign _077_ = ~(_081_ & _022_);
  assign _078_ = ~(_048_ & _006_);
  assign _038_ = ~(_077_ & _078_);
  assign _079_ = ~(_081_ & _016_);
  assign _080_ = ~(_048_ & _000_);
  assign _032_ = ~(_079_ & _080_);
  assign _007_ = mux_input0[1];
  assign _023_ = mux_input1[1];
  assign _081_ = selector;
  assign mux_output[1] = _039_;
  assign _008_ = mux_input0[2];
  assign _024_ = mux_input1[2];
  assign mux_output[2] = _040_;
  assign _009_ = mux_input0[3];
  assign _025_ = mux_input1[3];
  assign mux_output[3] = _041_;
  assign _010_ = mux_input0[4];
  assign _026_ = mux_input1[4];
  assign mux_output[4] = _042_;
  assign _011_ = mux_input0[5];
  assign _027_ = mux_input1[5];
  assign mux_output[5] = _043_;
  assign _012_ = mux_input0[6];
  assign _028_ = mux_input1[6];
  assign mux_output[6] = _044_;
  assign _013_ = mux_input0[7];
  assign _029_ = mux_input1[7];
  assign mux_output[7] = _045_;
  assign _014_ = mux_input0[8];
  assign _030_ = mux_input1[8];
  assign mux_output[8] = _046_;
  assign _015_ = mux_input0[9];
  assign _031_ = mux_input1[9];
  assign mux_output[9] = _047_;
  assign _001_ = mux_input0[10];
  assign _017_ = mux_input1[10];
  assign mux_output[10] = _033_;
  assign _002_ = mux_input0[11];
  assign _018_ = mux_input1[11];
  assign mux_output[11] = _034_;
  assign _003_ = mux_input0[12];
  assign _019_ = mux_input1[12];
  assign mux_output[12] = _035_;
  assign _004_ = mux_input0[13];
  assign _020_ = mux_input1[13];
  assign mux_output[13] = _036_;
  assign _005_ = mux_input0[14];
  assign _021_ = mux_input1[14];
  assign mux_output[14] = _037_;
  assign _006_ = mux_input0[15];
  assign _022_ = mux_input1[15];
  assign mux_output[15] = _038_;
  assign _000_ = mux_input0[0];
  assign _016_ = mux_input1[0];
  assign mux_output[0] = _032_;
endmodule
