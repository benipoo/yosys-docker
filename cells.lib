// test comment
/* test comment */
library(cells) {
  cell(BUF) {
    area: 1;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }
  cell(NOT) {
    area: 1;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }
  cell(NAND2) {
    area: 2;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B)'"; }
  }
  cell(NAND3) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C)'"; }
  }
  cell(NAND4) {
    area: 4;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C*D)'"; }
  }
  cell(NAND5) {
    area: 5;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C*D*E)'"; }
  }
  cell(NAND6) {
    area: 6;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C*D*E*F)'"; }
  }
  cell(NAND7) {
    area: 7;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(G) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C*D*E*F*G)'"; }
  }
  cell(NAND8) {
    area: 8;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(G) { direction: input; }
    pin(H) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C*D*E*F*G*H)'"; }
  }
  cell(NAND16) {
    area: 16;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(G) { direction: input; }
    pin(H) { direction: input; }
    pin(I) { direction: input; }
    pin(J) { direction: input; }
    pin(K) { direction: input; }
    pin(L) { direction: input; }
    pin(M) { direction: input; }
    pin(N) { direction: input; }
    pin(O) { direction: input; }
    pin(P) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P)'"; }
  }
  cell(NOR2) {
    area: 2;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)'"; }
  }
  cell(NOR3) {
    area: 3;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C)'"; }
  }
  cell(NOR4) {
    area: 4;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C+D)'"; }
  }
  cell(NOR5) {
    area: 5;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C+D+E)'"; }
  }
  cell(NOR6) {
    area: 6;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C+D+E+F)'"; }
  }
  cell(NOR7) {
    area: 7;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(G) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C+D+E+F+G)'"; }
  }
  cell(NOR8) {
    area: 8;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(E) { direction: input; }
    pin(F) { direction: input; }
    pin(G) { direction: input; }
    pin(H) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B+C+D+E+F+G+H)'"; }
  }
  cell(DFF) {
    area: 18;
    ff(IQ, IQN) { clocked_on: C;
                  next_state: D; }
    pin(C) { direction: input;
                 clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output;
              function: "IQ"; }
  }
}
